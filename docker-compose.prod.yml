services:
  postgres:
    image: postgres:15-alpine
    container_name: mahjong-postgres-prod
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mahjong_db}
      POSTGRES_USER: ${POSTGRES_USER:-mahjong_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - "5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-mahjong_user} -d ${POSTGRES_DB:-mahjong_db}",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mahjong-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mahjong-app-prod
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://${POSTGRES_USER:-mahjong_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-mahjong_db}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost}
      - NEXT_TELEMETRY_DISABLED=1
      - WEBSOCKET_HOST=0.0.0.0
      - WEBSOCKET_PORT=3000
    # AppポートはNginxだけ公開、直接アクセスしない
    expose:
      - "3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mahjong-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: mahjong-redis-prod
    restart: always
    expose:
      - "6379"
    volumes:
      - redis_data_prod:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - mahjong-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: mahjong-nginx-prod
    restart: always
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - mahjong-network
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local

networks:
  mahjong-network:
    driver: bridge
