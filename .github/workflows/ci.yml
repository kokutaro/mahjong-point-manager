name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  should_run:
    runs-on: ubuntu-latest
    outputs:
      run_backend_ci: ${{ contains(steps.check_files.outputs.changes, 'nondocs')}}
    steps:
      - uses: actions/checkout@v4
      - name: Detect changed paths (docs-only 判定)
        id: check_files
        uses: dorny/paths-filter@v3
        with:
          token: ${{ github.token }}
          filters: |
            docs:
              - '**/*.md'
              - 'docs/**'
            nondocs:
              - '!**/*.md'
              - '!docs/**'

  ci:
    needs: should_run
    if: needs.should_run.outputs.run_backend_ci == 'true'
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup database
        run: |
          npx prisma generate
          npx prisma db push
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test

      - name: Run type check
        run: npm run type-check

      - name: Run lint
        run: npm run lint

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: kokutaro/mahjong-point-manager

      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
